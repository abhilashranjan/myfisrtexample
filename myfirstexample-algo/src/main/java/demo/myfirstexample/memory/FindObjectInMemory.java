package demo.myfirstexample.memory;

import java.io.IOException;


/**
 * To know how many obejcts are created we can use jmap tools provided by java.
 * Jmap provides the memory usages heap dumbs and the total number of object creation, to use jmap we can
 * first run this program to know the process id. without process id this tools does not works.
 * Here in this programme we are using System.in.read so that it wil wait for input and we can get the process id.
 * To get process id we can use jps. After getting the process id we can use "jmap -histo <pid></>"
 * jmap -histo 1223
 *
 * There is another tools java heap analyzing tools which analyze heap dump
 * https://docs.oracle.com/javase/7/docs/technotes/tools/share/jhat.html
 * jhat <heap-dump-loc></>
 *
 * HPROF: A Heap/CPU Profiling Tool
 * https://docs.oracle.com/javase/7/docs/technotes/samples/hprof.html
 *
 *Following is the heap allocation profile generated by running the Java compiler (javac) on a set of input files. Only parts of the profiler output file (java.hprof.txt) are shown here.
 * Command used: javac -J-agentlib:hprof=heap=sites FindObjectInMemory.java
 *
 */
public class FindObjectInMemory {

    public static void main(String[] args) throws ClassNotFoundException, IOException {
        FindObjectInMemory findObjectInMemory = new FindObjectInMemory();
        Class<FindObjectInMemory> aClass = (Class<FindObjectInMemory>) Class.forName("demo.my.example.memory.FindObjectInMemory");
        System.out.println("Object Created");
        System.in.read();
    }
}
